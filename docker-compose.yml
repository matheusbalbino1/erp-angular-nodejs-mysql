version: "3.8"

services:
  client:
    build:
      context: ./client/erp-web
      dockerfile: Dockerfile

    ports:
      - "3002:100"
    container_name: client
    extra_hosts:
      - "server:192.168.1.12"
    networks:
      erp-angular:
        ipv4_address: 192.168.1.10
    depends_on:
      - server
  mysql:
    container_name: database
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: erp
    # volumes:s
    #   - /my/mysql/data:/var/lib/mysql
    ports:
      - 3306:3306
    # volumes:
    #   - /my/mysql/data:/var/lib/mysql
    networks:
      erp-angular:
        ipv4_address: 192.168.1.11
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: server
    environment:
      - NODE_ENV=production
    ports:
      - "3000:3000"
    networks:
      erp-angular:
        ipv4_address: 192.168.1.12
    depends_on:
      - mysql

  server-nestjs:
    build:
      context: ./server-nest
      dockerfile: Dockerfile
    container_name: server-nestjs
    environment:
      - NODE_ENV=development
    ports:
      - "3001:3001"
    networks:
      erp-angular:
        ipv4_address: 192.168.1.13
    depends_on:
      - mysql

networks:
  erp-angular:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.1.0/24
